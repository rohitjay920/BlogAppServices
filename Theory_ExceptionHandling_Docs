ResponseEntityExceptionHandler
	
ResponseEntityExceptionHandler is a convenient base class for controller advice classes. It provides exception handlers for internal 
Spring exceptions ie., all predefined exceptions hence when our class with @ControllerAdvice is extending ResponseEntityExceptionHandler
we don't need to handle those exceptions. If we try to forcefully handle the predefined exception the while the class with @ControllerAdvice 
is extending ResponseEntityExceptionHandler then the spring server wont start by throwing "Ambiguous @ExceptionHandler method mapped" as 
there is a method in the ResponseEntityExceptionHandler class annotated with @ExceptionHandler to handle the predefined exception and since 
we are also creating another method by annotating @Exceptionhandler and mentioning to forcefully handle the same exception the spring server 
is confused which class object has to be created to call the method resulting in BeanCreationException
	
If we really want to handle the predefined exception with our own method then the class with @ControllerAdvice must not extend
ResponseEntityExceptionHandler class to avoid the ambiguity.
	 
We only extend ResponseEntityExceptionHandler to handle the predefined exception, if we dont extend it then the handling of custom exception
would work fine without any threat to the application
	 